		ends_at: props.promo.ends_at,
		active: props.promo.active,
		image_uri: null,
		image_path: null,
		image_upload: false,
	});
	const refreshId = ref(uid());
	const save = () =>
		form.put(window.route("admin.promos.update", props.promo.id), {
			preserveScroll: true,
			preserveState: true,
			onFinish() {
				refreshId.value = uid();
			},
		});
</script>
<template>
	<Head :title="title ?? `New Promo`" />
	<AdminLayout>
		<main class="h-full container sm:p-8">
			<div
				class="relative h-full flex flex-auto flex-col px-4 sm:px-6 py-12 sm:py-6 md:px-8">
				<div class="flex flex-col gap-4 h-full">
					<div
						class="lg:flex items-center justify-between mb-4 gap-3">
						<div class="mb-4 lg:mb-0">
							<h3 class="h3">Add New Promo Image</h3>
							<p>
								Promotions images are displayed via random
								rotation in the index page header
							</p>
						</div>
						<div
							class="flex flex-col lg:flex-row lg:items-center gap-3">
							<BaseButton
								secondary
								link
								:href="route('admin.promos.index')">
								<VueIcon
									:icon="HiArrowLeft"
									class="w-4 h-4 -ml-1 mr-2 inline-block" />
								{{ $t("Back to promos list") }}
							</BaseButton>
						</div>
					</div>
					<div class="card sm:p-12 h-full border-0 card-border">
						<div class="card-body card-gutterless h-full">
							<form
								class="grid sm:grid-cols-2 gap-4"
								@submit.prevent="save()">
								<div class="grid">
									<div class="gap-3 grid">
										<FormInput
											v-model="form.image_uri"
											:disabled="form.image_upload"
											placeholder="https://"
											:error="form.errors.image_uri"
											:help="
												$t('Supports png, jpeg or svg')
											">
											<template #label>
												<div class="flex">
													<span class="mr-3">
														{{ $t("Image") }}
													</span>
													<label
														class="inline-flex items-center space-x-2">
														<input
															v-model="
																form.image_upload
															"
															class="form-switch h-5 w-10 rounded-full bg-slate-300 before:rounded-full before:bg-slate-50 checked:!bg-emerald-600 checked:before:bg-white dark:bg-navy-900 dark:before:bg-navy-300 dark:checked:before:bg-white"
															type="checkbox" />
														<span>
															{{
																$t(
																	"Upload to server",
																)
															}}
														</span>
													</label>
												</div>
											</template>
										</FormInput>
										<template v-if="form.image_upload">
											<FileUploader
												v-if="$page.props.s3"
												v-model="form.image_uri"
												v-model:file="form.image_path"
												:key="refreshId"
												auto />
											<FileUploaderLocal
												v-else
												:key="`u-${refreshId}`"
												v-model="form.image_uri"
												v-model:file="
													form.image_path
												" />
										</template>
										<img
											v-else
											class="w-auto h-24 my-auto rounded b-0"
											:src="
												form.image_uri ??
												form.image ??
												fakeLogo
											" />
									</div>
									<p
										v-if="form.errors.image"
										class="text-red-500">
										{{ form.errors.image }}
									</p>
									<p v-else class="text-xs">
										{{ $t("") }}
									</p>
								</div>
								<FormInput
									label="Promo Name"
									v-model="form.name"
									class="col-span-2 max-w-xs"
									type="text"
									:error="form.errors.name" />
								<FormInput
									label="Promotion Url"
									v-model="form.url"
									class="col-span-2"
									type="text"
									:error="form.errors.url" />

								<div>
									<FormLabel class="mb-1">
										{{ $t("Date & time") }}
									</FormLabel>
									<DatePicker
										v-model="form.starts_at"
										mode="dateTime"
										is-dark
										is24hr>
										<template
											v-slot="{
												inputValue,
												inputEvents,
											}">
											<input
												class="bg-white border-gray-300 text-gray-900 rounded-sm focus:ring-emerald-500 focus:border-emerald-500 dark:bg-gray-900 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white border block w-full focus:outline-none focus:ring-1 appearance-none py-2 text-sm pl-2 pr-2"
												:value="inputValue"
												v-on="inputEvents" />
										</template>
									</DatePicker>
									<p
										v-if="form.errors.starts_at"
										class="text-red-500">
										{{ form.errors.starts_at }}
									</p>
									<UseTimeAgo
										v-else
										v-slot="{ timeAgo }"
										:time="form.starts_at">
										<p
											class="text-sx font-semibold text-emerald-500">
											{{ timeAgo }}
										</p>
									</UseTimeAgo>
								</div>
								<div>
									<FormLabel class="mb-1">
										{{ $t("End Date & time") }}
									</FormLabel>
									<DatePicker
										v-model="form.ends_at"
										mode="dateTime"
										is-dark
										is24hr>
										<template
											v-slot="{
												inputValue,
												inputEvents,
											}">
											<input
												class="bg-white border-gray-300 text-gray-900 rounded-sm focus:ring-emerald-500 focus:border-emerald-500 dark:bg-gray-900 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white border block w-full focus:outline-none focus:ring-1 appearance-none py-2 text-sm pl-2 pr-2"
												:value="inputValue"
												v-on="inputEvents" />
										</template>
									</DatePicker>
									<p
										v-if="form.errors.ends_at"
										class="text-red-500">
										{{ form.errors.ends_at }}
									</p>
									<UseTimeAgo
										v-else
										v-slot="{ timeAgo }"
										:time="form.ends_at">
										<p
											class="text-sx font-semibold text-emerald-500">
											{{ timeAgo }}
										</p>
									</UseTimeAgo>
								</div>
								<FormSwitch v-model="form.active">
									{{ $t("Active") }}
								</FormSwitch>
								<div class="pt-5 col-span-2">
									<CollapseTransition>
										<div
											v-show="form.recentlySuccessful"
											class="flex items-center gap-3 justify-end p-4 mb-3 bg-emerald-600/10 text-emerald-400">
											Promo updated successfully
										</div>
									</CollapseTransition>
									<div
										class="flex items-center gap-3 justify-end">
										<BaseButton
											secondary
											as="button"
											:href="route('admin.promos.index')"
											type="button"
											link>
											{{ $t("Cancel") }}
										</BaseButton>
										<BaseButton
											type="submit"
											:disabled="form.processing">
											<Loading
												class="mr-2 -ml-1 inline-block w-5 h-5"
												v-if="form.processing" />
											{{ $t("Save Promo") }}
										</BaseButton>
									</div>
								</div>
							</form>
						</div>
					</div>
				</div>
			</div>
		</main>
	</AdminLayout>
</template>


================================================
File: resources/js/Pages/Admin/Promos/Index.vue
================================================
<script setup>
	import { ref } from "vue";

	import { Head, Link, router, useForm } from "@inertiajs/vue3";
	import { debouncedWatch, useUrlSearchParams } from "@vueuse/core";
	import { Plus } from "lucide-vue-next";
	import { HiPencil, HiTrash } from "oh-vue-icons/icons";

	import BaseButton from "@/Components/BaseButton.vue";
	import ConfirmationModal from "@/Components/ConfirmationModal.vue";
	import FormSwitch from "@/Components/FormSwitch.vue";
	import Loading from "@/Components/Loading.vue";
	import Pagination from "@/Components/Pagination.vue";
	import PrimaryButton from "@/Components/PrimaryButton.vue";
	import SearchInput from "@/Components/SearchInput.vue";
	import VueIcon from "@/Components/VueIcon.vue";
	import WeCopy from "@/Components/WeCopy.vue";
	import AdminLayout from "@/Layouts/AdminLayout.vue";
	import { truncateTx } from "@/lib/wagmi";

	defineProps({
		promos: Object,
		title: { required: false, type: String },
	});

	const params = useUrlSearchParams("history");
	const search = ref(params.search ?? "");
	const deletePromoForm = useForm({});
	const promoBeingDeleted = ref(null);

	const deletePromo = () => {
		deletePromoForm.delete(
			window.route("admin.promos.destroy", promoBeingDeleted.value?.id),
			{
				preserveScroll: true,
				preserveState: true,
				onSuccess: () => (promoBeingDeleted.value = null),
			},
		);
	};
	debouncedWatch(
		[search],
		([search]) => {
			router.get(
				window.route("admin.promos.index"),
				{ search },
				{
					preserveState: true,
					preserveScroll: true,
				},
			);
		},
		{
			maxWait: 700,
		},
	);

	const toggle = (promo) => {
		promo.busy = true;
		router.put(
			window.route("admin.promos.toggle", promo.id),
			{},
			{
				preserveScroll: true,
				preserveState: true,
				onFinish: () => {
					promo.busy = false;
					promoBeingDeleted.value = null;
				},
			},
		);
	};
</script>
<template>
	<Head :title="title ?? 'Promos'" />
	<AdminLayout>
		<main class="h-full">
			<div
				class="relative h-full flex flex-auto flex-col px-4 sm:px-6 py-12 sm:py-6 md:px-8">
				<div class="flex flex-col gap-4 h-full">
					<div
						class="lg:flex items-center justify-between mb-4 gap-3">
						<div class="mb-4 lg:mb-0">
							<h3 class="h3">
								{{ $t("Manage Image Promotions") }}
							</h3>
							<p>
								{{
									$t(
										"Image promos are rotated on the landing page",
									)
								}}
							</p>
						</div>
						<div
							class="flex flex-col lg:flex-row lg:items-center gap-3">
							<PrimaryButton
								secondary
								link
								:href="route('admin.promos.create')">
								<Plus class="w-4 h-4 mr-1 -ml-1 inline-flex" />
								{{ $t("Create New Promo") }}
							</PrimaryButton>
						</div>
					</div>
					<div class="card border-0 card-border">
						<div class="card-body card-gutterless h-full">
							<div
								class="lg:flex items-center justify-end mb-4 px-6">
								<div class="flex gap-x-3 sm:w-1/2 lg:w-1/4">
									<SearchInput
										class="max-w-md"
										v-model="search" />
								</div>
							</div>
							<div>
								<div class="overflow-x-auto">
									<table
										class="table-default table-hover"
										role="table">
										<thead>
											<tr role="row">
												<th
													scope="col"
													class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
													{{ $t("Name") }}
												</th>

												<th
													scope="col"
													class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
													{{ $t("Url") }}
												</th>
												<th
													scope="col"
													class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
													{{ $t("Starts At") }}
												</th>
												<th
													scope="col"
													class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
													{{ $t("Ends At") }}
												</th>
												<th
													scope="col"
													class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
													{{ $t("Active") }}
												</th>
												<td role="columnheader"></td>
											</tr>
										</thead>
										<tbody role="rowgroup">
											<tr
												v-for="promo in promos.data"
												:key="promo.id"
												role="row">
												<td
													class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-300">
													<div
														class="flex items-start gap-3">
														<img
															class="w-auto h-12 rounded border border-gray-700"
															:src="
																promo.image
															" />
														<div>
															{{ promo.name }}
														</div>
													</div>
												</td>

												<td
													class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-300">
													<WeCopy
														:text="promo.url"
														after>
														{{
															truncateTx(
																promo.url,
																16,
															)
														}}
													</WeCopy>
												</td>
												<td
													class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-300">
													{{ promo.starts_at }}
												</td>
												<td
													class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-300">
													{{ promo.ends_at }}
												</td>
												<td
													class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-300">
													<FormSwitch
														:model-value="
															promo.active
														"
														@update:model-value="
															toggle(promo)
														" />
												</td>
												<td role="cell">
													<div
														class="flex justify-end text-lg">
														<Link
															:href="
																route(
																	'admin.promos.edit',
																	promo.id,
																)
															"
															class="cursor-pointer p-2 hover:text-blue-600">
															<VueIcon
																:icon="HiPencil"
																class="w-4 h-4" />
														</Link>
														<a
															href="#"
															@click.prevent="
																promoBeingDeleted =
																	promo
															"
															class="cursor-pointer p-2 hover:text-red-500">
															<VueIcon
																:icon="HiTrash"
																class="w-4 h-4" />
														</a>
													</div>
												</td>
											</tr>
										</tbody>
									</table>
								</div>
								<Pagination :meta="promos.meta" />
							</div>
						</div>
					</div>
				</div>
			</div>
		</main>
		<ConfirmationModal
			:show="promoBeingDeleted"
			@close="promoBeingDeleted = null">
			<template #title>
				{{
					$t("Are you sure about deleting {promo} ?", {
						promo: promoBeingDeleted.name,
					})
				}}
			</template>

			<template #content>
				<p>
					{{
						$t(
							"This Action will remove the promo from the database and cannot be undone",
						)
					}}
				</p>
				<p>
					{{ $t("Its Recommended to Disable the promo Instead") }}
				</p>
			</template>

			<template #footer>
				<BaseButton
					secondary
					outlined
					class="uppercase text-xs font-semibold"
					@click="promoBeingDeleted = null">
					{{ $t("Cancel") }}
				</BaseButton>

				<BaseButton
					secondary
					class="ml-2 uppercase text-xs font-semibold"
					v-if="promoBeingDeleted.active"
					@click="toggle(promoBeingDeleted)">
